package jx.devices.fb;

public class ColorSpace 
{
    private short rgb16_table[] = null;
    private int rgb32_table[] = null;
    private PixelColor m_acCMAP[] = null;
    /*private static color_table[32][32][];*/

    
    public static final int CS_NO_COLOR_SPACE   = 0;
    public static final int CS_RGB32 		= 1;
    public static final int CS_RGBA32		= 2;
    public static final int CS_RGB24		= 3;
    public static final int CS_RGB16		= 4;
    public static final int CS_RGB15		= 5;
    public static final int CS_RGBA15		= 6;
    public static final int CS_CMAP8		= 7;
    public static final int CS_GRAY8		= 8;
    public static final int CS_CMAP4		= 9;
    public static final int CS_GRAY4		= 10;
    public static final int CS_GRAY1		= 11;	
 private static PixelColor s_acCMAP[] = new PixelColor[] 
    {
		new PixelColor (0x00,0x00,0x00,0x00),
		new PixelColor (0x11,0x11,0x11,0x00),
		new PixelColor (0x22,0x22,0x22,0x00),
		new PixelColor (0x33,0x33,0x33,0x00),
		new PixelColor (0x44,0x00,0x00,0x00),
		new PixelColor (0x55,0x11,0x11,0x00),
		new PixelColor (0x66,0x22,0x22,0x00),
		new PixelColor (0x77,0x33,0x33,0x00),
		new PixelColor (0x00,0x00,0x44,0x00),
		new PixelColor (0x11,0x11,0x55,0x00),
		new PixelColor (0x22,0x22,0x66,0x00),
		new PixelColor (0x33,0x33,0x77,0x00),
		new PixelColor (0x44,0x00,0x44,0x00),
		new PixelColor (0x55,0x11,0x55,0x00),
		new PixelColor (0x66,0x22,0x66,0x00),
		new PixelColor (0x77,0x33,0x77,0x00),
		new PixelColor (0x88,0x00,0x00,0x00),
		new PixelColor (0x99,0x11,0x11,0x00),
		new PixelColor (0xaa,0x22,0x22,0x00),
		new PixelColor (0xbb,0x33,0x33,0x00),
		new PixelColor (0xcc,0x00,0x00,0x00),
		new PixelColor (0xdd,0x11,0x11,0x00),
		new PixelColor (0xee,0x22,0x22,0x00),
		new PixelColor (0xff,0x33,0x33,0x00),
		new PixelColor (0x88,0x00,0x44,0x00),
		new PixelColor (0x99,0x11,0x55,0x00),
		new PixelColor (0xaa,0x22,0x66,0x00),
		new PixelColor (0xbb,0x33,0x77,0x00),
		new PixelColor (0xcc,0x00,0x44,0x00),
		new PixelColor (0xdd,0x11,0x55,0x00),
		new PixelColor (0xee,0x22,0x66,0x00),
		new PixelColor (0xff,0x33,0x77,0x00),
		new PixelColor (0x00,0x44,0x00,0x00),
		new PixelColor (0x11,0x55,0x11,0x00),
		new PixelColor (0x22,0x66,0x22,0x00),
		new PixelColor (0x33,0x77,0x33,0x00),
		new PixelColor (0x44,0x44,0x00,0x00),
		new PixelColor (0x55,0x55,0x11,0x00),
		new PixelColor (0x66,0x66,0x22,0x00),
		new PixelColor (0x77,0x77,0x33,0x00),
		new PixelColor (0x00,0x44,0x44,0x00),
		new PixelColor (0x11,0x55,0x55,0x00),
		new PixelColor (0x22,0x66,0x66,0x00),
		new PixelColor (0x33,0x77,0x77,0x00),
		new PixelColor (0x44,0x44,0x44,0x00),
		new PixelColor (0x55,0x55,0x55,0x00),
		new PixelColor (0x66,0x66,0x66,0x00),
		new PixelColor (0x77,0x77,0x77,0x00),
		new PixelColor (0x88,0x44,0x00,0x00),
		new PixelColor (0x99,0x55,0x11,0x00),
		new PixelColor (0xaa,0x66,0x22,0x00),
		new PixelColor (0xbb,0x77,0x33,0x00),
		new PixelColor (0xcc,0x44,0x00,0x00),
		new PixelColor (0xdd,0x55,0x11,0x00),
		new PixelColor (0xee,0x66,0x22,0x00),
		new PixelColor (0xff,0x77,0x33,0x00),
		new PixelColor (0x88,0x44,0x44,0x00),
		new PixelColor (0x99,0x55,0x55,0x00),
		new PixelColor (0xaa,0x66,0x66,0x00),
		new PixelColor (0xbb,0x77,0x77,0x00),
		new PixelColor (0xcc,0x44,0x44,0x00),
		new PixelColor (0xdd,0x55,0x55,0x00),
		new PixelColor (0xee,0x66,0x66,0x00),
		new PixelColor (0xff,0x77,0x77,0x00),
		new PixelColor (0x00,0x88,0x00,0x00),
		new PixelColor (0x11,0x99,0x11,0x00),
		new PixelColor (0x22,0xaa,0x22,0x00),
		new PixelColor (0x33,0xbb,0x33,0x00),
		new PixelColor (0x44,0x88,0x00,0x00),
		new PixelColor (0x55,0x99,0x11,0x00),
		new PixelColor (0x66,0xaa,0x22,0x00),
		new PixelColor (0x77,0xbb,0x33,0x00),
		new PixelColor (0x00,0x88,0x44,0x00),
		new PixelColor (0x11,0x99,0x55,0x00),
		new PixelColor (0x22,0xaa,0x66,0x00),
		new PixelColor (0x33,0xbb,0x77,0x00),
		new PixelColor (0x44,0x88,0x44,0x00),
		new PixelColor (0x55,0x99,0x55,0x00),
		new PixelColor (0x66,0xaa,0x66,0x00),
		new PixelColor (0x77,0xbb,0x77,0x00),
		new PixelColor (0x88,0x88,0x00,0x00),
		new PixelColor (0x99,0x99,0x11,0x00),
		new PixelColor (0xaa,0xaa,0x22,0x00),
		new PixelColor (0xbb,0xbb,0x33,0x00),
		new PixelColor (0xcc,0x88,0x00,0x00),
		new PixelColor (0xdd,0x99,0x11,0x00),
		new PixelColor (0xee,0xaa,0x22,0x00),
		new PixelColor (0xff,0xbb,0x33,0x00),
		new PixelColor (0x88,0x88,0x44,0x00),
		new PixelColor (0x99,0x99,0x55,0x00),
		new PixelColor (0xaa,0xaa,0x66,0x00),
		new PixelColor (0xbb,0xbb,0x77,0x00),
		new PixelColor (0xcc,0x88,0x44,0x00),
		new PixelColor (0xdd,0x99,0x55,0x00),
		new PixelColor (0xee,0xaa,0x66,0x00),
		new PixelColor (0xff,0xbb,0x77,0x00),
		new PixelColor (0x00,0xcc,0x00,0x00),
		new PixelColor (0x11,0xdd,0x11,0x00),
		new PixelColor (0x22,0xee,0x22,0x00),
		new PixelColor (0x33,0xff,0x33,0x00),
		new PixelColor (0x44,0xcc,0x00,0x00),
		new PixelColor (0x55,0xdd,0x11,0x00),
		new PixelColor (0x66,0xee,0x22,0x00),
		new PixelColor (0x77,0xff,0x33,0x00),
		new PixelColor (0x00,0xcc,0x44,0x00),
		new PixelColor (0x11,0xdd,0x55,0x00),
		new PixelColor (0x22,0xee,0x66,0x00),
		new PixelColor (0x33,0xff,0x77,0x00),
		new PixelColor (0x44,0xcc,0x44,0x00),
		new PixelColor (0x55,0xdd,0x55,0x00),
		new PixelColor (0x66,0xee,0x66,0x00),
		new PixelColor (0x77,0xff,0x77,0x00),
		new PixelColor (0x88,0xcc,0x00,0x00),
		new PixelColor (0x99,0xdd,0x11,0x00),
		new PixelColor (0xaa,0xee,0x22,0x00),
		new PixelColor (0xbb,0xff,0x33,0x00),
		new PixelColor (0xcc,0xcc,0x00,0x00),
		new PixelColor (0xdd,0xdd,0x11,0x00),
		new PixelColor (0xee,0xee,0x22,0x00),
		new PixelColor (0xff,0xff,0x33,0x00),
		new PixelColor (0x88,0xcc,0x44,0x00),
		new PixelColor (0x99,0xdd,0x55,0x00),
		new PixelColor (0xaa,0xee,0x66,0x00),
		new PixelColor (0xbb,0xff,0x77,0x00),
		new PixelColor (0xcc,0xcc,0x44,0x00),
		new PixelColor (0xdd,0xdd,0x55,0x00),
		new PixelColor (0xee,0xee,0x66,0x00),
		new PixelColor (0xff,0xff,0x77,0x00),
		new PixelColor (0x00,0x00,0x88,0x00),
		new PixelColor (0x11,0x11,0x99,0x00),
		new PixelColor (0x22,0x22,0xaa,0x00),
		new PixelColor (0x33,0x33,0xbb,0x00),
		new PixelColor (0x44,0x00,0x88,0x00),
		new PixelColor (0x55,0x11,0x99,0x00),
		new PixelColor (0x66,0x22,0xaa,0x00),
		new PixelColor (0x77,0x33,0xbb,0x00),
		new PixelColor (0x00,0x00,0xcc,0x00),
		new PixelColor (0x11,0x11,0xdd,0x00),
		new PixelColor (0x22,0x22,0xee,0x00),
		new PixelColor (0x33,0x33,0xff,0x00),
		new PixelColor (0x44,0x00,0xcc,0x00),
		new PixelColor (0x55,0x11,0xdd,0x00),
		new PixelColor (0x66,0x22,0xee,0x00),
		new PixelColor (0x77,0x33,0xff,0x00),
		new PixelColor (0x88,0x00,0x88,0x00),
		new PixelColor (0x99,0x11,0x99,0x00),
		new PixelColor (0xaa,0x22,0xaa,0x00),
		new PixelColor (0xbb,0x33,0xbb,0x00),
		new PixelColor (0xcc,0x00,0x88,0x00),
		new PixelColor (0xdd,0x11,0x99,0x00),
		new PixelColor (0xee,0x22,0xaa,0x00),
		new PixelColor (0xff,0x33,0xbb,0x00),
		new PixelColor (0x88,0x00,0xcc,0x00),
		new PixelColor (0x99,0x11,0xdd,0x00),
		new PixelColor (0xaa,0x22,0xee,0x00),
		new PixelColor (0xbb,0x33,0xff,0x00),
		new PixelColor (0xcc,0x00,0xcc,0x00),
		new PixelColor (0xdd,0x11,0xdd,0x00),
		new PixelColor (0xee,0x22,0xee,0x00),
		new PixelColor (0xff,0x33,0xff,0x00),
		new PixelColor (0x00,0x44,0x88,0x00),
		new PixelColor (0x11,0x55,0x99,0x00),
		new PixelColor (0x22,0x66,0xaa,0x00),
		new PixelColor (0x33,0x77,0xbb,0x00),
		new PixelColor (0x44,0x44,0x88,0x00),
		new PixelColor (0x55,0x55,0x99,0x00),
		new PixelColor (0x66,0x66,0xaa,0x00),
		new PixelColor (0x77,0x77,0xbb,0x00),
		new PixelColor (0x00,0x44,0xcc,0x00),
		new PixelColor (0x11,0x55,0xdd,0x00),
		new PixelColor (0x22,0x66,0xee,0x00),
		new PixelColor (0x33,0x77,0xff,0x00),
		new PixelColor (0x44,0x44,0xcc,0x00),
		new PixelColor (0x55,0x55,0xdd,0x00),
		new PixelColor (0x66,0x66,0xee,0x00),
		new PixelColor (0x77,0x77,0xff,0x00),
		new PixelColor (0x88,0x44,0x88,0x00),
		new PixelColor (0x99,0x55,0x99,0x00),
		new PixelColor (0xaa,0x66,0xaa,0x00),
		new PixelColor (0xbb,0x77,0xbb,0x00),
		new PixelColor (0xcc,0x44,0x88,0x00),
		new PixelColor (0xdd,0x55,0x99,0x00),
		new PixelColor (0xee,0x66,0xaa,0x00),
		new PixelColor (0xff,0x77,0xbb,0x00),
		new PixelColor (0x88,0x44,0xcc,0x00),
		new PixelColor (0x99,0x55,0xdd,0x00),
		new PixelColor (0xaa,0x66,0xee,0x00),
		new PixelColor (0xbb,0x77,0xff,0x00),
		new PixelColor (0xcc,0x44,0xcc,0x00),
		new PixelColor (0xdd,0x55,0xdd,0x00),
		new PixelColor (0xee,0x66,0xee,0x00),
		new PixelColor (0xff,0x77,0xff,0x00),
		new PixelColor (0x00,0x88,0x88,0x00),
		new PixelColor (0x11,0x99,0x99,0x00),
		new PixelColor (0x22,0xaa,0xaa,0x00),
		new PixelColor (0x33,0xbb,0xbb,0x00),
		new PixelColor (0x44,0x88,0x88,0x00),
		new PixelColor (0x55,0x99,0x99,0x00),
		new PixelColor (0x66,0xaa,0xaa,0x00),
		new PixelColor (0x77,0xbb,0xbb,0x00),
		new PixelColor (0x00,0x88,0xcc,0x00),
		new PixelColor (0x11,0x99,0xdd,0x00),
		new PixelColor (0x22,0xaa,0xee,0x00),
		new PixelColor (0x33,0xbb,0xff,0x00),
		new PixelColor (0x44,0x88,0xcc,0x00),
		new PixelColor (0x55,0x99,0xdd,0x00),
		new PixelColor (0x66,0xaa,0xee,0x00),
		new PixelColor (0x77,0xbb,0xff,0x00),
		new PixelColor (0x88,0x88,0x88,0x00),
		new PixelColor (0x99,0x99,0x99,0x00),
		new PixelColor (0xaa,0xaa,0xaa,0x00),
		new PixelColor (0xbb,0xbb,0xbb,0x00),
		new PixelColor (0xcc,0x88,0x88,0x00),
		new PixelColor (0xdd,0x99,0x99,0x00),
		new PixelColor (0xee,0xaa,0xaa,0x00),
		new PixelColor (0xff,0xbb,0xbb,0x00),
		new PixelColor (0x88,0x88,0xcc,0x00),
		new PixelColor (0x99,0x99,0xdd,0x00),
		new PixelColor (0xaa,0xaa,0xee,0x00),
		new PixelColor (0xbb,0xbb,0xff,0x00),
		new PixelColor (0xcc,0x88,0xcc,0x00),
		new PixelColor (0xdd,0x99,0xdd,0x00),
		new PixelColor (0xee,0xaa,0xee,0x00),
		new PixelColor (0xff,0xbb,0xff,0x00),
		new PixelColor (0x00,0xcc,0x88,0x00),
		new PixelColor (0x11,0xdd,0x99,0x00),
		new PixelColor (0x22,0xee,0xaa,0x00),
		new PixelColor (0x33,0xff,0xbb,0x00),
		new PixelColor (0x44,0xcc,0x88,0x00),
		new PixelColor (0x55,0xdd,0x99,0x00),
		new PixelColor (0x66,0xee,0xaa,0x00),
		new PixelColor (0x77,0xff,0xbb,0x00),
		new PixelColor (0x00,0xcc,0xcc,0x00),
		new PixelColor (0x11,0xdd,0xdd,0x00),
		new PixelColor (0x22,0xee,0xee,0x00),
		new PixelColor (0x33,0xff,0xff,0x00),
		new PixelColor (0x44,0xcc,0xcc,0x00),
		new PixelColor (0x55,0xdd,0xdd,0x00),
		new PixelColor (0x66,0xee,0xee,0x00),
		new PixelColor (0x77,0xff,0xff,0x00),
		new PixelColor (0x88,0xcc,0x88,0x00),
		new PixelColor (0x99,0xdd,0x99,0x00),
		new PixelColor (0xaa,0xee,0xaa,0x00),
		new PixelColor (0xbb,0xff,0xbb,0x00),
		new PixelColor (0xcc,0xcc,0x88,0x00),
		new PixelColor (0xdd,0xdd,0x99,0x00),
		new PixelColor (0xee,0xee,0xaa,0x00),
		new PixelColor (0xff,0xff,0xbb,0x00),
		new PixelColor (0x88,0xcc,0xcc,0x00),
		new PixelColor (0x99,0xdd,0xdd,0x00),
		new PixelColor (0xaa,0xee,0xee,0x00),
		new PixelColor (0xbb,0xff,0xff,0x00),
		new PixelColor (0xcc,0xcc,0xcc,0x00),
		new PixelColor (0xdd,0xdd,0xdd,0x00),
		new PixelColor (0xee,0xee,0xee,0x00),
		new PixelColor (0xff,0xff,0xff,0x00)
	};

    public static final ColorSpace RGB32	=  new ColorSpace(CS_RGB32);
    public static final ColorSpace RGBA32	=  new ColorSpace(CS_RGB32);
    public static final ColorSpace RGB24	=  new ColorSpace(CS_RGB24);;
    public static final ColorSpace RGB16	=  new ColorSpace(CS_RGB16);
    public static final ColorSpace RGB15	=  new ColorSpace(CS_RGB15);
    public static final ColorSpace RGBA15	=  new ColorSpace(CS_RGBA15);
    public static final ColorSpace CMAP8	=  new ColorSpace(CS_CMAP8);
    public static final ColorSpace GRAY8	=  new ColorSpace(CS_GRAY8);
    public static final ColorSpace CMAP4	=  new ColorSpace(CS_CMAP4);
    public static final ColorSpace GRAY4	=  new ColorSpace(CS_GRAY4);
    public static final ColorSpace GRAY1	=  new ColorSpace(CS_GRAY1);	
    
    private int value;

   

    public ColorSpace()
    {
	rgb16_table = new short[256];
	rgb32_table = new int[256];
	m_acCMAP = new PixelColor[256];

	setCMAP(ColorSpace.s_acCMAP);

	this.value = CS_NO_COLOR_SPACE;
    }
    
    public ColorSpace(int value) {
	if (value < 0 || value > 11) throw new Error("ColorSpace::ColorSpace() unknown colorspace!");

	rgb16_table = new short[256];
	rgb32_table = new int[256];
	m_acCMAP = new PixelColor[256];
	
	setCMAP(ColorSpace.s_acCMAP);
	
	this.value = value;
    }
    
    public ColorSpace (ColorSpace eColorSpace)
    {
	rgb16_table = new short[256];
	rgb32_table = new int[256];
	m_acCMAP = new PixelColor[256];
	
	setCMAP(ColorSpace.s_acCMAP);
	
	this.value = eColorSpace.value;
    }

    public int getValue() { return value; }
    
    public void setValue(int value)
    {
	if (value < 0 || value > 11) throw new Error("ColorSpace::setValue() unknown colorspace!");
	this.value = value;
    }
    
    public short CMAP8toRGB16 (byte nColor)
    {
	return rgb16_table[(int)nColor&0xff];
    }
    public int CMAP8toRGB32 (byte nColor)
    {
	return rgb32_table[(int)nColor & 0xff];
    }

    public PixelColor CMAP8toPixelColor(byte nColor) {
	return m_acCMAP[(int)nColor & 0xff];
    }
    
    public String toString ()
    {
	if (this == null)
	    return "<null>";
	switch (value)
	    {
	    case CS_NO_COLOR_SPACE:
		return "CS_NO_COLOR_SPACE";
	    case CS_RGB32:
		return "CS_RGB32";
	    case CS_RGBA32:
		return "CS_RGBA32";
	    case CS_RGB16:
		return "CS_RGB16";
	    case CS_CMAP8:
		return "CS_CMAP8";
	    case CS_GRAY8:
		return "CS_GRAY8";				
	    }				
	return "CS_UNKNOWN(" + value + ")";
    }		

    public void setCMAP (PixelColor acCMAP[])
    {
	for (int i = 0; i < 256; i++)
	    {
		m_acCMAP[i] = new PixelColor (acCMAP[i]);
		rgb16_table[i] = acCMAP[i].toRGB16 ();
		rgb32_table[i] = acCMAP[i].toRGB32 ();
	    }			
    }	
}
